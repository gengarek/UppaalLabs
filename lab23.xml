<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
clock time;
int N = 3;
chan connecting, no, answer, connected, set_id;
chan download, logout;
int GSId,hs,cc, CSId;
typedef int[0,1000] id_c;
bool ok [3],load;
</declaration>
	<template>
		<name x="5" y="5">Server</name>
		<declaration>// Place local declarations here.
int handshake = 8;

int genId(int n)
{
  return n*137;
}</declaration>
		<location id="id0" x="-263" y="-161">
			<name x="-273" y="-195">Init</name>
		</location>
		<location id="id1" x="192" y="-160">
			<name x="182" y="-194">Connected</name>
		</location>
		<location id="id2" x="40" y="-160">
			<name x="30" y="-194">Ok</name>
		</location>
		<location id="id3" x="-128" y="-160">
			<name x="-138" y="-194">Response</name>
		</location>
		<location id="id4" x="-391" y="-161">
			<name x="-401" y="-195">Idle</name>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="-42" y="-119">GSId==CSId&amp;
load==false</label>
			<label kind="synchronisation" x="-34" y="-59">download!</label>
			<label kind="assignment" x="-25" y="-76">load:=1</label>
			<nail x="195" y="-76"/>
			<nail x="-391" y="-76"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-238" y="-127">hs!=handshake</label>
			<label kind="assignment" x="-228" y="-110">ok[cc]:=0</label>
			<nail x="-246" y="-110"/>
			<nail x="-144" y="-110"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-246" y="-187">hs==handshake</label>
			<label kind="assignment" x="-229" y="-161">ok[cc]:=1</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-374" y="-187">connecting?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-254" y="-272">hs!=handshake</label>
			<label kind="synchronisation" x="-221" y="-255">no!</label>
			<label kind="assignment" x="-238" y="-238">ok[cc]:=0</label>
			<nail x="-127" y="-238"/>
			<nail x="-391" y="-238"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="81" y="-185">connected?</label>
			<label kind="assignment" x="85" y="-153">GSId:=genId(cc)</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-93" y="-153">hs==handshake</label>
			<label kind="synchronisation" x="-68" y="-187">answer!</label>
		</transition>
	</template>
	<template>
		<name>Client</name>
		<parameter>const int[0,2] id</parameter>
		<declaration>bool logged;
int sesId;</declaration>
		<location id="id5" x="-68" y="-204">
			<name x="-78" y="-238">Response</name>
		</location>
		<location id="id6" x="-178" y="-204">
			<name x="-188" y="-238">Connecting</name>
		</location>
		<location id="id7" x="-384" y="-208">
			<name x="-416" y="-229">Idle</name>
		</location>
		<location id="id8" x="-161" y="-93">
			<name x="-171" y="-127">Session</name>
		</location>
		<location id="id9" x="51" y="-204">
			<name x="41" y="-238">Connected</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-160" y="-221">answer?</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-306" y="-119">logout?</label>
			<nail x="-383" y="-93"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-42" y="-204">connected!</label>
			<nail x="-68" y="-204"/>
			<nail x="-51" y="-204"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-331" y="-280">no?</label>
			<nail x="-272" y="-263"/>
			<nail x="-382" y="-263"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-331" y="-229">connecting!</label>
			<label kind="assignment" x="-357" y="-204">hs:=id+6,cc:=id</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-102" y="-119">set_id?</label>
			<label kind="assignment" x="-119" y="-93">CSId := GSId,sesId:=GSId</label>
			<nail x="51" y="-93"/>
		</transition>
	</template>
	<template>
		<name>Session</name>
		<parameter>const int[0,2] id</parameter>
		<declaration>int loadTime, limit = 10000;</declaration>
		<location id="id10" x="42" y="-8">
			<name x="32" y="-42">Downlowad</name>
			<label kind="invariant" x="17" y="8">time&lt;=10000</label>
		</location>
		<location id="id11" x="170" y="-93">
			<name x="160" y="-127">Open</name>
		</location>
		<location id="id12" x="-51" y="-93">
			<name x="-76" y="-127">Closed</name>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="select" x="178" y="-42">e : id_c</label>
			<label kind="synchronisation" x="76" y="-8">download?</label>
			<label kind="assignment" x="178" y="-17">loadTime:=e</label>
			<nail x="170" y="-8"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="-102" y="8">time&gt;=limit</label>
			<label kind="synchronisation" x="-153" y="-76">logout!</label>
			<label kind="assignment" x="-170" y="-59">load:=false,time:=0,
ok[id]:=0</label>
			<nail x="-93" y="-8"/>
			<nail x="-93" y="-93"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="51" y="-93">cc==id</label>
			<label kind="synchronisation" x="51" y="-119">set_id!</label>
		</transition>
	</template>
	<system>// List one or more processes to be composed into a system.
system Server, Client, Session;</system>
	<queries>
		<query>
			<formula>load==true --&gt; forall (i:int[0,2]) Session(i).Downlowad
			</formula>
			<comment>Jezeli ktos sciaga plik =&gt; sciaganie jest mozliwe
			</comment>
		</query>
		<query>
			<formula>forall (i:int[0,2]) Session(i).Closed --&gt; load==false
			</formula>
			<comment>Jezeli sesja bedzie zamknieta =&gt; sciaganie pliku sie skonzy
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Server.Ok
			</formula>
			<comment>server moze byc w stanie ok
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Server.Ok
			</formula>
			<comment>server bedze w stanie ok
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Server.Idle
			</formula>
			<comment>server moze byc idle
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Server.Idle
			</formula>
			<comment>Server napewno bedzie idle
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; forall (i:int[0,2]) Session(i).Closed
			</formula>
			<comment>sesje moga byc zamkniete
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; forall (i:int[0,2]) Session(i).Closed
			</formula>
			<comment>sesje napewno beda zamkniete
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Server.Connected
			</formula>
			<comment>Serwer moze byc podlaczony
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Server.Connected
			</formula>
			<comment>Serwer napewno bedzie podlaczony
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;Server.Response
			</formula>
			<comment>Serwer moze wyslac odpowiedz
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt;Server.Response
			</formula>
			<comment>Serwer napewno wysle odpowiedz 
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Session(2).Downlowad 
			</formula>
			<comment>Sesja(2) moze zaczac sciaganie
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Session(2).Downlowad
			</formula>
			<comment>Sesja(2) napewno zacznie sciaganie
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Client(2).Session
			</formula>
			<comment>Clijent(2) (majacy poprawny handshake) moze otworzyc sesje
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; Client(2).Session
			</formula>
			<comment>Clijent(2) (majacy poprawny handshake) napewno otworzy sesje
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; forall (i:int[0,2]) Client(i).Session
			</formula>
			<comment>Stan Session procesu Clients moze zostac osiagnienty
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; forall (i:int[0,2]) Client(i).Session
			</formula>
			<comment>Stan Session procesu Clients napewno bedzie osiagnienty
			</comment>
		</query>
		<query>
			<formula>A[] Server.Idle
			</formula>
			<comment>Serwer zawsze IDLE
			</comment>
		</query>
		<query>
			<formula>A[] forall (i:int[0,1]) Client(i).Idle
			</formula>
			<comment>Clijenci zawsze w IDLE
			</comment>
		</query>
	</queries>
</nta>
